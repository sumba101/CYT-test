/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsEnum,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { EnumPickupCashStatus } from "./EnumPickupCashStatus";
import { EnumPickupPickupStatus } from "./EnumPickupPickupStatus";
import { EnumPickupScrapType } from "./EnumPickupScrapType";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { Type } from "class-transformer";
@InputType()
class PickupCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  agentId?: string | null;

  @ApiProperty({
    required: true,
    enum: EnumPickupCashStatus,
  })
  @IsEnum(EnumPickupCashStatus)
  @Field(() => EnumPickupCashStatus)
  cashStatus!: "Pending" | "Payed";

  @ApiProperty({
    required: true,
    enum: EnumPickupPickupStatus,
  })
  @IsEnum(EnumPickupPickupStatus)
  @Field(() => EnumPickupPickupStatus)
  pickupStatus!: "Pending" | "Cancelled" | "Filled";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  rateForScrap!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  remuneration!: number;

  @ApiProperty({
    required: true,
    enum: EnumPickupScrapType,
  })
  @IsEnum(EnumPickupScrapType)
  @Field(() => EnumPickupScrapType)
  scrapType!: "Paper" | "Metal" | "Plastic" | "Glass";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  scrapWeight!: number;

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  uuid!: UserWhereUniqueInput;
}
export { PickupCreateInput };
